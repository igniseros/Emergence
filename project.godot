; Engine configuration file.
; It's best edited using the editor UI and not directly,
; since the parameters that go here are not all obvious.
;
; Format:
;   [section] ; section goes between []
;   param=value ; assign values to parameters

config_version=4

_global_script_classes=[ {
"base": "Reference",
"class": "Behavior",
"language": "GDScript",
"path": "res://Parkers Systems/Evolution/Behavioral/Behavior.gd"
}, {
"base": "PhysDot",
"class": "CrawlDot",
"language": "GDScript",
"path": "res://Dots/Parker/Crawl/crawl_dot.gd"
}, {
"base": "CrawlDot",
"class": "CrawlFriendDot",
"language": "GDScript",
"path": "res://Dots/Parker/Crawl/crawl_friend_dot.gd"
}, {
"base": "Reference",
"class": "Dot",
"language": "GDScript",
"path": "res://Dots/Basic/dot.gd"
}, {
"base": "LifeDot",
"class": "EvolvingLifeDot",
"language": "GDScript",
"path": "res://Dots/Parker/Life/Evolution 1/evolving_life_dot.gd"
}, {
"base": "PhysDot",
"class": "FoodDot",
"language": "GDScript",
"path": "res://Dots/Parker/Life/Basic/food_dot.gd"
}, {
"base": "PhysDot",
"class": "GeneratorFood2Dot",
"language": "GDScript",
"path": "res://Dots/Parker/Environment/generator_food_2_dot.gd"
}, {
"base": "PhysDot",
"class": "GeneratorFoodDot",
"language": "GDScript",
"path": "res://Dots/Parker/Environment/generator_food_dot.gd"
}, {
"base": "CrawlDot",
"class": "KillerCrawlDot",
"language": "GDScript",
"path": "res://Dots/Parker/Crawl/killer_crawl_dot.gd"
}, {
"base": "KillerCrawlDot",
"class": "KillerCrawlFriendDot",
"language": "GDScript",
"path": "res://Dots/Parker/Crawl/killer_crawl_friend_dot.gd"
}, {
"base": "PhysDot",
"class": "KillerWallDot",
"language": "GDScript",
"path": "res://Dots/Parker/Environment/killer_wall.gd"
}, {
"base": "PhysDot",
"class": "LifeDot",
"language": "GDScript",
"path": "res://Dots/Parker/Life/Basic/life_dot.gd"
}, {
"base": "LifeDot",
"class": "NativeLifeDot",
"language": "GDScript",
"path": "res://Dots/Parker/Life/Basic/native__life_dot.gd"
}, {
"base": "Dot",
"class": "PhysDot",
"language": "GDScript",
"path": "res://Dots/Basic/phys_dot.gd"
}, {
"base": "Reference",
"class": "Step",
"language": "GDScript",
"path": "res://Parkers Systems/Evolution/Behavioral/Step.gd"
}, {
"base": "Step",
"class": "StepAttack",
"language": "GDScript",
"path": "res://Parkers Systems/Evolution/Behavioral/Steps/attack_step.gd"
}, {
"base": "Step",
"class": "StepEat",
"language": "GDScript",
"path": "res://Parkers Systems/Evolution/Behavioral/Steps/eat_step.gd"
}, {
"base": "Step",
"class": "StepRandomJump",
"language": "GDScript",
"path": "res://Parkers Systems/Evolution/Behavioral/Steps/random_jump_step.gd"
}, {
"base": "Step",
"class": "StepRandomWalk",
"language": "GDScript",
"path": "res://Parkers Systems/Evolution/Behavioral/Steps/random_walk_step.gd"
}, {
"base": "Step",
"class": "StepWait",
"language": "GDScript",
"path": "res://Parkers Systems/Evolution/Behavioral/Steps/wait_step.gd"
}, {
"base": "PhysDot",
"class": "WallDot",
"language": "GDScript",
"path": "res://Dots/Basic/wall_dot.gd"
} ]
_global_script_class_icons={
"Behavior": "",
"CrawlDot": "",
"CrawlFriendDot": "",
"Dot": "",
"EvolvingLifeDot": "",
"FoodDot": "",
"GeneratorFood2Dot": "",
"GeneratorFoodDot": "",
"KillerCrawlDot": "",
"KillerCrawlFriendDot": "",
"KillerWallDot": "",
"LifeDot": "",
"NativeLifeDot": "",
"PhysDot": "",
"Step": "",
"StepAttack": "",
"StepEat": "",
"StepRandomJump": "",
"StepRandomWalk": "",
"StepWait": "",
"WallDot": ""
}

[application]

config/name="Large Grid Evolution"
run/main_scene="res://Sims/Sim.tscn"
config/icon="res://icon.png"

[autoload]

Grid="*res://grid.gd"
Converter="*res://Converter.gd"
PDF="*res://Dots/parkers_dot_functions.gd"
TheGreatConnection="*res://the_great_connection.gd"

[display]

window/size/width=1080
window/size/height=720

[importer_defaults]

texture={
"compress/bptc_ldr": 0,
"compress/hdr_mode": 0,
"compress/lossy_quality": 0.7,
"compress/mode": 0,
"compress/normal_map": 0,
"detect_3d": true,
"flags/anisotropic": false,
"flags/filter": false,
"flags/mipmaps": false,
"flags/repeat": 0,
"flags/srgb": 2,
"process/HDR_as_SRGB": false,
"process/fix_alpha_border": true,
"process/invert_color": false,
"process/normal_map_invert_y": false,
"process/premult_alpha": false,
"size_limit": 0,
"stream": false,
"svg/scale": 1.0
}

[physics]

common/enable_pause_aware_picking=true

[rendering]

environment/default_clear_color=Color( 0.172549, 0.172549, 0.172549, 1 )
environment/default_environment="res://default_env.tres"
